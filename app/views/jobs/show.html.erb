<p style="color: green"><%= notice %></p>

<div class="show-job">
  <div class="job-details" style="padding: 20px;">
    <h2 style="color: var(--orange);"><%= @job.title %></h2>
    <p><strong>Location:</strong> <%= @job.location %></p>
    <p><strong>Salary:</strong> $<%= @job.salary %></p>
    <div style="margin-top: 20px;">
      <strong>Description:</strong>
      <p><%= format_description(@job.description) %></p>
    </div>
  </div>

  <div class="actions"
    style="display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      gap: 10px;
      margin: 20px;"
    >
    <%= link_to "Edit this Job", edit_job_path(@job), class: "gradient-button", style: "margin-right: 10px;" %>
    <%= link_to "Back to Jobs", jobs_path, class: "gradient-button", style: "margin-right: 10px;" %>
    <%= button_to "Destroy this Job", @job, method: :delete, class: "gradient-button", data: { confirm: "Are you sure?" } %>
  </div>
</div>

<div class="search-bar">

  <div class="row" id="job-show-row">

    <div class="col-sm-8" id="who">
      <%= form_with url: job_path(@job), method: :get, class: "d-flex" do %>
        <%= text_field_tag :query, params[:query], class: "form-control", placeholder: "Type users name" %>
        <%= text_field_tag :postcode, params[:postcode], class: "form-control", placeholder: "Type a postcode" %>

        <div class="ordine">
          <div class="form-group", style="display: flex; flex-direction: column; align-items: start;">
            <%= label_tag :competencies, "Select Competencies" %>
            <% ['coss', 'supervisor', '360 operator', 'ground worker', 'telehandler driver', 'Engineer', 'steel fixer', 'carpenter', 'electrician'].each do |competency| %>
              <div class="form-check">
                <%= check_box_tag "competencies[]", competency, params[:competencies]&.include?(competency), class: "form-check-input" %>
                <%= label_tag "competencies_#{competency}", competency, class: "form-check-label" %>
              </div>
            <% end %>
          </div>

          <div class="the-other-part">
            <%= select_tag :driver, options_for_select([['Driver', ''], ['Yes', true], ['No', false]], params[:driver]), class: "form-control" %>
            <%= select_tag :sponsor, options_for_select([['Sponsor', ''], ['Primary', 'primary'], ['Secondary', 'secondary']], params[:sponsor]), class: "form-control" %>
            <%= text_field_tag :location, params[:location], class: "form-control", placeholder: "Type a location" %>
            <%= text_field_tag :distance, params[:distance], class: "form-control", placeholder: "Distance (km)" %>
            </div>
          </div>
        </div>

        <%= submit_tag "Search", class: "gradient-button" %>
      <% end %>
    </div>
  </div>
</div>

</div>

<div class="users">
  <% @users.each do |user| %>
    <div class="user-item">
      <div class="user-info">
        <%= link_to "#{user.last_name}, #{user.first_name}", user_path(user), class: "user-link" %>
      </div>
      <button class="gradient-button" data-user-id="<%= user.id %>" data-job-id="<%= @job.id %>">Send Email</button>
    </div>
  <% end %>
</div>

<!-- Button to send email to all users -->
<div class="send-email-all">
  <button id="send-email-all-button" class="gradient-button">Send Email Message to All Users</button>
</div>


<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Handle single user email button
    document.querySelectorAll('.gradient-button[data-user-id]').forEach(button => {
      button.addEventListener('click', (event) => {
        const btn = event.target;
        const userId = btn.getAttribute('data-user-id');
        const jobId = btn.getAttribute('data-job-id');

        fetch(`/jobs/${jobId}/send_email_to_user`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
          },
          body: JSON.stringify({ user_id: userId, job_id: jobId })
        })
        .then(response => response.json())
        .then(data => {
          btn.textContent = 'Sent';
          btn.style.backgroundColor = 'transparent'; // Optional styling
          btn.disabled = true; // Optionally disable the button
        })
        .catch(error => console.error('Error:', error));
      });
    });

    // Handle "Send Email to All Users" button
    document.getElementById('send-email-all-button')?.addEventListener('click', () => {
      const userIds = Array.from(document.querySelectorAll('.user-item .gradient-button[data-user-id]'))
                          .map(button => button.getAttribute('data-user-id'));

      if (userIds.length === 0) {
        alert('No users selected.');
        return;
      }

      const jobId = document.querySelector('.gradient-button[data-job-id]')?.getAttribute('data-job-id');
      const allButton = document.getElementById('send-email-all-button');

      fetch(`/jobs/${jobId}/send_email_to_all`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
        },
        body: JSON.stringify({ user_ids: userIds, job_id: jobId })
      })
      .then(response => response.json())
      .then(data => {
        alert('Email message sent to all selected users');
        allButton.textContent = 'Emails Sent'; // Change button text
        allButton.style.backgroundColor = 'transparent'; // Optional styling
        allButton.disabled = true;

        document.querySelectorAll('.gradient-button[data-user-id]').forEach(btn => {
          btn.textContent = 'Send';
          btn.style.backgroundColor = 'transparent'; // Optional styling
          btn.disabled = true; // Optionally disable the button
        });
      })
      .catch(error => console.error('Error:', error));
    });
  });

</script>

<style>
  .user-item {
    display: flex;
    width: 50%;
    text-align: center;
    justify-content: center;
    align-items: baseline;


    border-bottom: 1px solid var(--orange);
  }

  .users {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .user-info {
    padding: 0;
  }

  .show-job {
    display: flex;
    justify-content: space-around;
    align-items: center;
  }

  .ordine {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 60px;
  }

  .the-other-part {
    display: flex;
    flex-direction: column;
    justify-content: end;
    gap: 10px;
  }

  #job-show-row {
        display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
    justify-content: center;
    padding: 20px;
    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
    width: 80%;
  }

  #who {
    width: 70%;
  }

  @media (max-width: 450px) {
    .show-job{
      flex-direction: column;
    }

    .ordine {
      flex-direction: column;
      gap: 10px;
    }

    .user-item {
      width: 80%;
    }

    .the-other-part {
      align-items: normal;
    }
  }
</style>
